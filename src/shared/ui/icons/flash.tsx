import React, { ReactNode } from 'react'
import Svg, { Path, SvgProps } from 'react-native-svg'
import cn from 'clsx'

interface FlashIconProps extends SvgProps {
    color?: string
    size?: number
    variant?: 'solid' | 'outline'
    state?: 'on' | 'off'
}

export function FlashIcon({
    color = '#5D6368',
    size = 24,
    variant = 'outline',
    state = 'off',
    className,
    ...rest
}: FlashIconProps): ReactNode {
    return (
        <Svg
            className={cn('fill-current', className)}
            width={size}
            height={size}
            viewBox="0 0 24 24"
            fill="none"
            {...rest}
        >
            {variant === 'solid' ? (
                state === 'on' ? (
                    <Path
                        d="M10.525 20.325C10.375 20.275 10.25 20.1875 10.15 20.0625C10.05 19.9375 10 19.7833 10 19.6V14H9C8.45 14 7.97917 13.8042 7.5875 13.4125C7.19583 13.0208 7 12.55 7 12V4C7 3.45 7.19583 2.97917 7.5875 2.5875C7.97917 2.19583 8.45 2 9 2H14.85C15.3833 2 15.8125 2.20833 16.1375 2.625C16.4625 3.04167 16.5583 3.5 16.425 4L15 9H16.125C16.725 9 17.1708 9.26667 17.4625 9.8C17.7542 10.3333 17.725 10.85 17.375 11.35L11.375 20.025C11.275 20.175 11.1458 20.275 10.9875 20.325C10.8292 20.375 10.675 20.375 10.525 20.325Z"
                        fill={color}
                    />
                ) : (
                    <Path
                        d="M15.2251 12.375L7.45011 4.6C7.30011 4.45 7.19178 4.29583 7.12511 4.1375C7.05844 3.97917 7.02511 3.80833 7.02511 3.625C7.02511 3.20833 7.19178 2.83333 7.52511 2.5C7.85844 2.16667 8.26678 2 8.75011 2H14.8501C15.3834 2 15.8126 2.20833 16.1376 2.625C16.4626 3.04167 16.5584 3.5 16.4251 4L15.0001 9H16.1251C16.7418 9 17.1876 9.26667 17.4626 9.8C17.7376 10.3333 17.7084 10.85 17.3751 11.35L16.7501 12.25C16.5668 12.5 16.3251 12.6417 16.0251 12.675C15.7251 12.7083 15.4584 12.6083 15.2251 12.375ZM19.0751 21.9L13.7501 16.6L11.3751 20.025C11.2918 20.1583 11.1709 20.2542 11.0126 20.3125C10.8543 20.3708 10.6918 20.375 10.5251 20.325C10.3584 20.275 10.2293 20.1833 10.1376 20.05C10.0459 19.9167 10.0001 19.7667 10.0001 19.6V14H9.00011C8.45011 14 7.97928 13.8042 7.58761 13.4125C7.19594 13.0208 7.00011 12.55 7.00011 12V9.85L2.07511 4.925C1.87511 4.725 1.77928 4.4875 1.78761 4.2125C1.79594 3.9375 1.90011 3.7 2.10011 3.5C2.30011 3.3 2.53761 3.2 2.81261 3.2C3.08761 3.2 3.32511 3.3 3.52511 3.5L20.5001 20.5C20.7001 20.7 20.8001 20.9333 20.8001 21.2C20.8001 21.4667 20.7001 21.7 20.5001 21.9C20.3001 22.1 20.0626 22.2 19.7876 22.2C19.5126 22.2 19.2751 22.1 19.0751 21.9Z"
                        fill={color}
                    />
                )
            ) : state === 'on' ? (
                <Path
                    d="M12 15.6L15.2 11H12.35L14.35 4H9V12H12V15.6ZM17.375 11.35L11.375 20.025C11.275 20.175 11.1458 20.275 10.9875 20.325C10.8292 20.375 10.675 20.375 10.525 20.325C10.375 20.275 10.25 20.1875 10.15 20.0625C10.05 19.9375 10 19.7833 10 19.6V14H9C8.45 14 7.97917 13.8042 7.5875 13.4125C7.19583 13.0208 7 12.55 7 12V4C7 3.45 7.19583 2.97917 7.5875 2.5875C7.97917 2.19583 8.45 2 9 2H14.85C15.3833 2 15.8125 2.20833 16.1375 2.625C16.4625 3.04167 16.5583 3.5 16.425 4L15 9H16.125C16.725 9 17.1708 9.26667 17.4625 9.8C17.7542 10.3333 17.725 10.85 17.375 11.35Z"
                    fill={color}
                />
            ) : (
                <Path
                    d="M16.4254 4L15.0004 9H16.1254C16.7254 9 17.1712 9.26667 17.4629 9.8C17.7546 10.3333 17.7254 10.85 17.3754 11.35L16.7504 12.25C16.5671 12.5 16.3254 12.6417 16.0254 12.675C15.7254 12.7083 15.4587 12.6083 15.2254 12.375C15.0587 12.2083 14.9629 12.0083 14.9379 11.775C14.9129 11.5417 14.9671 11.325 15.1004 11.125L15.2004 11H13.6754C13.3421 11 13.0754 10.8708 12.8754 10.6125C12.6754 10.3542 12.6171 10.0583 12.7004 9.725L14.3504 4H8.00039C7.71706 4 7.47956 3.90417 7.28789 3.7125C7.09622 3.52083 7.00039 3.28333 7.00039 3C7.00039 2.71667 7.09622 2.47917 7.28789 2.2875C7.47956 2.09583 7.71706 2 8.00039 2H14.8504C15.3837 2 15.8129 2.20833 16.1379 2.625C16.4629 3.04167 16.5587 3.5 16.4254 4ZM19.0754 21.9L13.7504 16.6L11.3754 20.025C11.2754 20.175 11.1462 20.275 10.9879 20.325C10.8296 20.375 10.6754 20.375 10.5254 20.325C10.3754 20.275 10.2504 20.1875 10.1504 20.0625C10.0504 19.9375 10.0004 19.7833 10.0004 19.6V14H9.00039C8.45039 14 7.97956 13.8042 7.58789 13.4125C7.19622 13.0208 7.00039 12.55 7.00039 12V9.85L2.07539 4.925C1.87539 4.725 1.77539 4.4875 1.77539 4.2125C1.77539 3.9375 1.87539 3.7 2.07539 3.5C2.27539 3.3 2.51289 3.2 2.78789 3.2C3.06289 3.2 3.30039 3.3 3.50039 3.5L20.5004 20.5C20.7004 20.7 20.8004 20.9333 20.8004 21.2C20.8004 21.4667 20.7004 21.7 20.5004 21.9C20.3004 22.1 20.0629 22.2 19.7879 22.2C19.5129 22.2 19.2754 22.1 19.0754 21.9Z"
                    fill={color}
                />
            )}
        </Svg>
    )
}
